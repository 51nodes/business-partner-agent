# Build and push images to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  batch: true
  branches:
    include:
    - oss-prepare # later when we are oss, we use master again (adjust also container Tag and condition in deploy stage!)
    - feature/*
    - releases/*
  paths:
    include:
    - manifests/*
    - backend/*
    - Dockerfile
    - azure-pipelines.yml

variables:
  dockerRegistryServiceConnection: 'EconomyOfThingsDockerRegistryConnection'
  imageRepositorySsiCompanyAgent: 'ssi-company-agent'
  containerRegistry: 'economyofthings.azurecr.io'
  tag: '$(Build.SourceBranchName)'  #'$(Build.BuildId)'
  imagePullSecret: 'acrcred'
  k8connection: 'ssiCompanyAgentKubernetesConnection'
  namespace: 'ssi-company-agent'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Test
  jobs:  
  - job: Maven
    displayName: Maven
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: MavenAuthenticate@0
        displayName: 'Maven Authenticate'
        inputs:
          artifactsFeeds: economy-of-things
      - task: Maven@3
        displayName: 'build maven project'
        inputs:
          mavenPomFile: 'backend/pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'test spotbugs:check pmd:check'

- stage: BuildAndDeploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/oss-prepare'), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: Build and Deploy
  jobs:  
  - job: BuildAndDeploy
    displayName: Build and Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: MavenAuthenticate@0
      displayName: 'Maven Authenticate'
      inputs:
        artifactsFeeds: economy-of-things
    - task: Maven@3
      displayName: 'Maven package'
      inputs:
        mavenPomFile: 'backend/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'package -DskipTests=true' 
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)               
    - task: Maven@3
      displayName: 'Maven docker build and push'
      inputs:
        mavenPomFile: 'backend/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'docker:build docker:push -Ddocker.push.registry=$(containerRegistry) -Ddocker.name=iil/%a:$(tag)'
    - task: Docker@2
      displayName: Logout of ACR
      inputs:
        command: logout
        containerRegistry: $(dockerRegistryServiceConnection)